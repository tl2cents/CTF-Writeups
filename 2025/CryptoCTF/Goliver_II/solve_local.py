from sage.all import EllipticCurve, GF, ZZ
# nc 91.107.252.0 17733
from pwn import remote, context, log, process
from sage.all import PolynomialRing, Zmod, Ideal
from Crypto.Util.number import long_to_bytes

p = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F
a, b = 0, 7
n = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141
x = 0x4F22E22228BD75086D77AE65174C000F132BFD4EF3E28BEF20AC476997D4444F
y = 0x3456B224247A4F73BF187AC25864F8F694C078380E6BDDF51379AC33F18BD829
G = (x, y)

pr = PolynomialRing(GF(n), ["sk0", "sk1", "sk2", "sk3", "f", "hm", "r0", "r1", "r2"])
sk0, sk1, sk2, sk3, f, hm, r0, r1, r2 = pr.gens()
sks = [sk0, sk1, sk2, sk3]

basis = [sk2**2 + 74767669207013409338890436130748029424931449992550991996087234932499957547908*sk2*sk3 + 27261243583201950420905821351610486807161145583974612541816118695536833005127*sk3**2, 
         sk2*hm + 88574485813055703586852188699944357832619466011166775007341404973279060172889*sk2 + 73641516065142874136378815630625843746259775492325296268125735709867899614724*sk3, 
         sk3*hm + 93902743841434967754226814568008301940506678204624195566029822889680329406909*sk2 + 39995751498440871726907615314972870680373671075169108260667908265602692482008*sk3, 
         hm**2 + 12778148074180379890188819006229320660155572807260978885404150097363591160560*hm + 78048683503217539857471585736105873621352102558011456831972877489657722032620, 
         sk2*r1 + 32693891454692920401672976394670442798252953213881487820752864642610015768214*hm + 64730592784137417905394882924853462769774606968409446070516412531769472542945, 
         sk3*r1 + 3719354054629977975904898684864124825238450439163334565278900489474456601*hm + 62482033559241990783403350793224854654491848413469640430527088075778341624172, 
         hm*r1 + 109803322908978600303848398968658616154455133604891458022375337558009105671871*r1 + 30711745548478716087491901016227496275892212610332291239844596439920411045731*r2, 
         r1**2 + 17483346959974243831865670888879851691861141403070226015643889689778300902373*r1*r2 + 105031348035560600146832900344303018487992001157856876450694187643027590393244*r2**2,
         sk2*r2 + 67295951607721910681688617705961073131724156311032115522459288401081029340565*hm + 106948869121758254612480637898307262864168619498550887035769415315648052983674, 
         sk3*r2 + 8171477479845275732281718708362758760034288814113725723781565047462748429549*hm + 65281182556397062954986054218425984159645552057780802904198657463475094791976, 
         hm*r2 + 56929872682944107121948884446354311799157151343714674614578280371281067069919*r1 + 18766914402517975009911405046258612358538003481444425245633975680872646983026*r2, 
         sk0 + 113403087937397458642253606352004497808111022082852270517320337090711769486219*sk2 + 2389001299918736781317378656683410044726542196222633865284826050806392008117*sk3, 
         sk1 + 29449681030533938555700699655300194071324331397420469021235211343746073482827*sk2 + 86342408206782256867870285353387713781513232881654435361369951797772088011509*sk3, 
         f + 83869434115339975445680332736367952520055225235799731772737243493084027298146*hm + 84836197096089204337376116676029479015722251754136096386045197779716164916165, 
         r0 + 107649190424268099125595762734903542079665641571470554631089848426115470492135*r1 + 30391199607659978977580729954524342113021863475233932338223063351043685971331*r2]

hm_poly = basis[3]
hm_poly_univariate = hm_poly.univariate_polynomial()
f_hm_poly = basis[-2]
print("hm_poly:", hm_poly)
hm_roots = hm_poly_univariate.roots()
for root in hm_roots:
    # print("hm root:", root)
    f_poly = f_hm_poly.substitute(hm=root[0])
    f_poly_univariate = f_poly.univariate_polynomial()
    f_roots = f_poly_univariate.roots()
    for f_root in f_roots:
        f_val = f_root[0]
        hm_val = root[0]
        flag_half = long_to_bytes(int(f_val))
        if flag_half.startswith(b"CCTF"):
            print(flag_half)
