# [*] Encrypted flag: (1838093238134122608883099367666302403302561164929172808287*g + 74366539459554150980070701532779276006414229309226280398669, 72589090687919632083610900620770240801562169483522792528874*g + 20585081301433661444687600192010479856366596933932044216622)
# [*] Curve parameters: p=92334410938280003045243185253995953693674663725780624876117, a=0, b=70486028178005372146444625022569761600902590380225229269994
# [*] Partial factors of p - 1: 2^2 * 3^3 * 13 * 67 * 981570894866266988191980112833226534992501846810611737
# [*] Finite field: Finite Field in g of size 92334410938280003045243185253995953693674663725780624876117^2
# [*] Order of the curve: q = 8525643443319161872330829748478394047130245813441957606976559187117484470128161215192715547263534386284827374441743168
# [*] Partial factors of q: 2^6 * 3 * 19 * 37 * 751 * 5419 * 281893 * 340927 * 30634999 * 5271666952454778583163782168697975009627708083325333239426077137504375939617250496157873
# [*] Successfully factored q_max factors: 360927547 * 4143402859 * 838217796847 * 5507755908307 * 7457012691763 * 1464903728831779 * 69898079700730597
# [*] Smooth subgroup: 83263149934186065865894548265890232136076545403095080004417500895681814899201240070336, 286 bits
# [*] Cube roots of unity: [25470718081877272573630809443530725078544809006194664939684, 66863692856402730471612375810465228615129854719585959936432]
# [*] Square roots of unity: [92334410938280003045243185253995953693674663725780624876116]
# [*] Euler's totient function: 2615555488794020640782648696018736253751304919282987353474492729266411391286812079306505289056569149084771749462016000
# [*] x0 = 51505740378693976212246842293503679559502751737183938529226*g + 22083481382511369638902959096829570031685620783925266098170
# [*] Smooth: 283 bits
# [*] Trying point: (41861127480796093492342494101581425523524061902182748542648*g + 40562832718953874603449359908116894260296723107781061184034 : 47027231332061808551238450210252835648683671296934086491753*g + 63472408544602433475660930519264613604408450951814834335117 : 1)
# [*] Trying point: (66007768136925093535885601862860590943909140147293194038395*g + 14954576836222345590183654277479062808135010434071320104844 : 47027231332061808551238450210252835648683671296934086491753*g + 63472408544602433475660930519264613604408450951814834335117 : 1)
# c0 = 73998393822437955172952414659776112436694851901630801869525
# [*] lambda Bound: 1 bits
# [*] c = 10407893741773258233236818607234672839447523348339299660328300048655078764030956878317
# [*] encflag = (1838093238134122608883099367666302403302561164929172808287*g + 74366539459554150980070701532779276006414229309226280398669, 72589090687919632083610900620770240801562169483522792528874*g + 20585081301433661444687600192010479856366596933932044216622)
# [*] E = Elliptic Curve defined by y^2 = x^3 + 70486028178005372146444625022569761600902590380225229269994 over Finite Field in g of size 92334410938280003045243185253995953693674663725780624876117^2
# [*] cg = 1
# fx = 84493811180763226289755420904255587004131147699447752747049*g + 36022679643963663347052264809924906195683523366525644033183
# fy = 50342622179302677896701774575773660813867645599569922450659*g + 7698233849989168186245265665649758772863334129657846497963
# b'\x05\xbd\x1eR\xeaS\xe4%\xc1a\xf20\xa7;?a\x07\x1e$\xf1B\x9e\x03\xcc\x9f'
from pwn import remote, process, context, log
from math import gcd, prod
from Crypto.Util.number import isPrime, long_to_bytes, bytes_to_long
from sage.all import EllipticCurve, GF, Zmod, factor, euler_phi, ZZ, PolynomialRing, discrete_log_lambda
from multiprocessing import Process, Queue

R = PolynomialRing(ZZ, "g")
g = R.gen()
mod_poly = g**2 + 13 * g + 37
p = 92334410938280003045243185253995953693674663725780624876117
F = GF((p, 2), name="g", modulus=mod_poly)
g = F.gen()

a0 = 0
d = 70486028178005372146444625022569761600902590380225229269994
E = EllipticCurve(F, [a0, d])
q = E.order()
E.set_order(q)

encflag =  (1838093238134122608883099367666302403302561164929172808287*g + 74366539459554150980070701532779276006414229309226280398669, 72589090687919632083610900620770240801562169483522792528874*g + 20585081301433661444687600192010479856366596933932044216622)

c = 73998393822437955172952414659776112436694851901630801869525
a1s = F(1).nth_root(3, all = True)
b1s = F(1).nth_root(2, all = True)
cg = gcd(c, q)
c_inv = pow(c//cg, -1, q)
log.info(f"cg = {cg}")
flag_pt = c_inv * E(encflag)
for a1 in a1s:
    for b1 in b1s:
        fx, fy = (flag_pt[0]/a1, flag_pt[1]/b1)
        print(f"{fx = }")
        # print(f"{fy = }")
        print(long_to_bytes(int(fx[0])))
        # print(long_to_bytes(int(fx[1])))
        